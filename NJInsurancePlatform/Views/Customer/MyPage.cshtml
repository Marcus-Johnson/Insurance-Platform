@model NJInsurancePlatform.Models.ApplicationUser
@{
	ViewData["Title"] = "Welcome " + User.Identity.Name;
}
@*PAGE CREATED JUST TO TEST FUNCTIONALITY OF CODE*@

@using System.Text.Json;
@using NJInsurancePlatform.Models.WeatherModel;
@using System;
@using System.Threading.Tasks;
@using Weather.ApiWrapper;

@{
    var weatherWrapper = new WeatherApi();

    var result = await weatherWrapper.GetResult();

    var options = new JsonSerializerOptions
            {
                PropertyNamingPolicy = JsonNamingPolicy.CamelCase
            };
    var weatherJson = JsonSerializer.Deserialize<Root>(result, options);
}

@if (string.IsNullOrEmpty(result))
{
    <span>....Loading....</span>
}
else {
<div class="padding">
    <div class="row container d-flex justify-content-center">
        <div v-if="located" class="col-lg-8 grid-margin stretch-card">
            <div class="card card-weather">
                <div class="card-body">
                    <div class="weather-date-location">
                        <h3>@weatherJson.Data.Timelines[0].StartTime.ToString("dddd")</h3>
                        <p class="text-gray">
                            <span class="weather-date">@weatherJson.Data.Timelines[0].Timestep</span>
                        </p>
                    </div>
                    <div class="weather-data d-flex">
                        <div class="mr-auto">
                            <h4 class="display-3">
                                @weatherJson.Data.Timelines[0].Intervals[0].Values.Temperature<span class="symbol">&#176;</span> F
                            </h4>
                            <p>@WeatherCodeHelper.GetWeatherCode(weatherJson.Data.Timelines[0].Intervals[0].Values.WeatherCode.ToString())</p>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>
<p>@result</p>
}