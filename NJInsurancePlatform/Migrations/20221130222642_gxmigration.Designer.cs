// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using NJInsurancePlatform.Data;

#nullable disable

namespace NJInsurancePlatform.Migrations
{
    [DbContext(typeof(InsuranceCorpDbContext))]
<<<<<<<< HEAD:NJInsurancePlatform/Migrations/20221130222642_gxmigration.Designer.cs
    [Migration("20221130222642_gxmigration")]
    partial class gxmigration
========
    [Migration("20221130163946_initial")]
    partial class initial
>>>>>>>> Main:NJInsurancePlatform/Migrations/20221130163946_initial.Designer.cs
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles", (string)null);

                    b.HasData(
                        new
                        {
<<<<<<<< HEAD:NJInsurancePlatform/Migrations/20221130222642_gxmigration.Designer.cs
                            Id = "f66d9f19-6a33-4d5c-9da9-616967a9edbb",
                            ConcurrencyStamp = "d2e64540-a53f-442e-b7e6-dadf0c05b9cf",
========
                            Id = "91765d77-19fc-4104-9835-ceb4fdef5024",
                            ConcurrencyStamp = "7424cdec-ca74-492a-9c02-95b14967e985",
>>>>>>>> Main:NJInsurancePlatform/Migrations/20221130163946_initial.Designer.cs
                            Name = "Admin",
                            NormalizedName = "ADMIN"
                        },
                        new
                        {
<<<<<<<< HEAD:NJInsurancePlatform/Migrations/20221130222642_gxmigration.Designer.cs
                            Id = "43b58f44-9a2b-496e-b16e-ac1dedaae366",
                            ConcurrencyStamp = "30110b7a-7b0f-4a20-acec-2703cb0e85b8",
========
                            Id = "497a132b-dfc8-4e70-bff8-2acb96325392",
                            ConcurrencyStamp = "31eda4a4-3f40-4233-ae38-5b55d34a4456",
>>>>>>>> Main:NJInsurancePlatform/Migrations/20221130163946_initial.Designer.cs
                            Name = "Beneficiary",
                            NormalizedName = "BENEFICIARY"
                        },
                        new
                        {
<<<<<<<< HEAD:NJInsurancePlatform/Migrations/20221130222642_gxmigration.Designer.cs
                            Id = "d3e1cf63-a360-4721-b9f1-26073ab53180",
                            ConcurrencyStamp = "0bdb499d-d5b3-4081-a8ac-371a564ec834",
========
                            Id = "a59c54d5-8815-4983-8317-88c0d1f02304",
                            ConcurrencyStamp = "ea42e981-c923-4497-a972-866cab6b980a",
>>>>>>>> Main:NJInsurancePlatform/Migrations/20221130163946_initial.Designer.cs
                            Name = "Customer",
                            NormalizedName = "CUSTOMER"
                        },
                        new
                        {
<<<<<<<< HEAD:NJInsurancePlatform/Migrations/20221130222642_gxmigration.Designer.cs
                            Id = "4ccdb6fe-310a-4d2e-adac-a948d65283ca",
                            ConcurrencyStamp = "7da3a0b0-fde2-4417-84b8-f64ec230284c",
========
                            Id = "6d803124-ad9e-4ae0-bcde-cf295e51d713",
                            ConcurrencyStamp = "0bbd2c31-dcc9-4731-90ec-ce1c81c42277",
>>>>>>>> Main:NJInsurancePlatform/Migrations/20221130163946_initial.Designer.cs
                            Name = "Pending",
                            NormalizedName = "PENDING"
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUser", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Discriminator")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("AspNetUsers", (string)null);

                    b.HasDiscriminator<string>("Discriminator").HasValue("IdentityUser");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RoleId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles", (string)null);

                    b.HasData(
                        new
                        {
                            UserId = "8e445865-a24d-4543-a6c6-9443d048cdb9",
<<<<<<<< HEAD:NJInsurancePlatform/Migrations/20221130222642_gxmigration.Designer.cs
                            RoleId = "f66d9f19-6a33-4d5c-9da9-616967a9edbb"
========
                            RoleId = "91765d77-19fc-4104-9835-ceb4fdef5024"
>>>>>>>> Main:NJInsurancePlatform/Migrations/20221130163946_initial.Designer.cs
                        },
                        new
                        {
                            UserId = "8e445865-a24d-4543-a6c6-9443d048cdb7",
<<<<<<<< HEAD:NJInsurancePlatform/Migrations/20221130222642_gxmigration.Designer.cs
                            RoleId = "d3e1cf63-a360-4721-b9f1-26073ab53180"
========
                            RoleId = "a59c54d5-8815-4983-8317-88c0d1f02304"
>>>>>>>> Main:NJInsurancePlatform/Migrations/20221130163946_initial.Designer.cs
                        },
                        new
                        {
                            UserId = "8e445865-a24d-4543-a6c6-9443d048cdb8",
<<<<<<<< HEAD:NJInsurancePlatform/Migrations/20221130222642_gxmigration.Designer.cs
                            RoleId = "43b58f44-9a2b-496e-b16e-ac1dedaae366"
                        },
                        new
                        {
                            UserId = "cfdb5e3f-6932-44c4-96fa-49c904691038",
                            RoleId = "d3e1cf63-a360-4721-b9f1-26073ab53180"
                        },
                        new
                        {
                            UserId = "fb359e2e-46b4-4734-8f26-4609cdc367d4",
                            RoleId = "d3e1cf63-a360-4721-b9f1-26073ab53180"
                        },
                        new
                        {
                            UserId = "ce214807-51a0-4cce-9470-ed2fa5c9d1f6",
                            RoleId = "d3e1cf63-a360-4721-b9f1-26073ab53180"
                        },
                        new
                        {
                            UserId = "481d2d38-a518-4f83-9650-0b7de0a80dfd",
                            RoleId = "d3e1cf63-a360-4721-b9f1-26073ab53180"
                        },
                        new
                        {
                            UserId = "32b894d6-5027-4b30-8c1e-b5f21d15cf6b",
                            RoleId = "43b58f44-9a2b-496e-b16e-ac1dedaae366"
                        },
                        new
                        {
                            UserId = "adaa93cd-694e-4be2-8289-d2b4822d7446",
                            RoleId = "43b58f44-9a2b-496e-b16e-ac1dedaae366"
                        },
                        new
                        {
                            UserId = "4015a99f-444c-440d-96b6-6e29bb72586a",
                            RoleId = "43b58f44-9a2b-496e-b16e-ac1dedaae366"
                        },
                        new
                        {
                            UserId = "b4bb8b48-edcf-4204-ad46-c2cc90f2d9e7",
                            RoleId = "43b58f44-9a2b-496e-b16e-ac1dedaae366"
========
                            RoleId = "497a132b-dfc8-4e70-bff8-2acb96325392"
                        },
                        new
                        {
                            UserId = "7df548f2-8144-4536-a0cf-f979c231ae0e",
                            RoleId = "a59c54d5-8815-4983-8317-88c0d1f02304"
                        },
                        new
                        {
                            UserId = "04b44a8c-9a4c-4834-b712-61bec619b545",
                            RoleId = "a59c54d5-8815-4983-8317-88c0d1f02304"
                        },
                        new
                        {
                            UserId = "63735308-4e1e-4738-9002-ebca7ed3b52c",
                            RoleId = "a59c54d5-8815-4983-8317-88c0d1f02304"
                        },
                        new
                        {
                            UserId = "040ba841-bb3a-44f6-bdda-3ee9731218f2",
                            RoleId = "a59c54d5-8815-4983-8317-88c0d1f02304"
                        },
                        new
                        {
                            UserId = "8b7eb503-35d6-4e1c-9339-374b4c4a6672",
                            RoleId = "497a132b-dfc8-4e70-bff8-2acb96325392"
                        },
                        new
                        {
                            UserId = "fc82c6b9-10ec-4ace-b819-d7fbfee4cf56",
                            RoleId = "497a132b-dfc8-4e70-bff8-2acb96325392"
                        },
                        new
                        {
                            UserId = "d7a10c84-450f-42ea-a601-9e0ea61c3b98",
                            RoleId = "497a132b-dfc8-4e70-bff8-2acb96325392"
                        },
                        new
                        {
                            UserId = "dd6d4216-cdf4-4e91-91c4-82c1346376a4",
                            RoleId = "497a132b-dfc8-4e70-bff8-2acb96325392"
>>>>>>>> Main:NJInsurancePlatform/Migrations/20221130163946_initial.Designer.cs
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens", (string)null);
                });

            modelBuilder.Entity("NJInsurancePlatform.Models.Beneficiary", b =>
                {
                    b.Property<Guid>("BeneficiaryMUID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("CustomerMUID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("EmailAddress")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)");

                    b.Property<string>("Gender")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)");

                    b.Property<string>("LicenseNumber")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("SSN")
                        .IsRequired()
                        .HasMaxLength(9)
                        .HasColumnType("nvarchar(9)");

                    b.Property<Guid?>("TransactionMUID")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("BeneficiaryMUID");

                    b.HasIndex("TransactionMUID");

                    b.ToTable("Beneficiaries");
                });

            modelBuilder.Entity("NJInsurancePlatform.Models.Bill", b =>
                {
                    b.Property<Guid>("BillMUID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<double>("Balance")
                        .HasColumnType("float");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<double>("MinimumPayment")
                        .HasColumnType("float");

                    b.Property<DateTime>("PolicyDueDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("PolicyMUID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("BillMUID");

                    b.ToTable("Bills");

                    b.HasData(
                        new
                        {
                            BillMUID = new Guid("f46090ed-d574-4456-8e18-97150ff885ed"),
                            Balance = 799.34000000000003,
<<<<<<<< HEAD:NJInsurancePlatform/Migrations/20221130222642_gxmigration.Designer.cs
                            CreatedDate = new DateTime(2022, 11, 30, 17, 26, 41, 833, DateTimeKind.Local).AddTicks(1361),
                            MinimumPayment = 123.98999999999999,
                            PolicyDueDate = new DateTime(2022, 11, 30, 17, 26, 41, 833, DateTimeKind.Local).AddTicks(1359),
========
                            CreatedDate = new DateTime(2022, 11, 30, 11, 39, 46, 102, DateTimeKind.Local).AddTicks(5202),
                            MinimumPayment = 123.98999999999999,
                            PolicyDueDate = new DateTime(2022, 11, 30, 11, 39, 46, 102, DateTimeKind.Local).AddTicks(5200),
>>>>>>>> Main:NJInsurancePlatform/Migrations/20221130163946_initial.Designer.cs
                            PolicyMUID = new Guid("a61a15af-6a7d-4e82-9659-c5003721f5ea"),
                            Status = "status"
                        },
                        new
                        {
                            BillMUID = new Guid("417a8279-0227-43c4-8504-c4396860ada0"),
                            Balance = 509.33999999999997,
<<<<<<<< HEAD:NJInsurancePlatform/Migrations/20221130222642_gxmigration.Designer.cs
                            CreatedDate = new DateTime(2022, 11, 30, 17, 26, 41, 833, DateTimeKind.Local).AddTicks(1365),
                            MinimumPayment = 283.99000000000001,
                            PolicyDueDate = new DateTime(2022, 11, 30, 17, 26, 41, 833, DateTimeKind.Local).AddTicks(1363),
========
                            CreatedDate = new DateTime(2022, 11, 30, 11, 39, 46, 102, DateTimeKind.Local).AddTicks(5206),
                            MinimumPayment = 283.99000000000001,
                            PolicyDueDate = new DateTime(2022, 11, 30, 11, 39, 46, 102, DateTimeKind.Local).AddTicks(5204),
>>>>>>>> Main:NJInsurancePlatform/Migrations/20221130163946_initial.Designer.cs
                            PolicyMUID = new Guid("abdafd4a-48ff-4f1a-bcc6-fd3dd2c659a5"),
                            Status = "status"
                        },
                        new
                        {
                            BillMUID = new Guid("c28330de-a718-465b-9772-5b28ad6395e8"),
                            Balance = 109.34,
<<<<<<<< HEAD:NJInsurancePlatform/Migrations/20221130222642_gxmigration.Designer.cs
                            CreatedDate = new DateTime(2022, 11, 30, 17, 26, 41, 833, DateTimeKind.Local).AddTicks(1367),
                            MinimumPayment = 129.09,
                            PolicyDueDate = new DateTime(2022, 11, 30, 17, 26, 41, 833, DateTimeKind.Local).AddTicks(1366),
========
                            CreatedDate = new DateTime(2022, 11, 30, 11, 39, 46, 102, DateTimeKind.Local).AddTicks(5210),
                            MinimumPayment = 129.09,
                            PolicyDueDate = new DateTime(2022, 11, 30, 11, 39, 46, 102, DateTimeKind.Local).AddTicks(5208),
>>>>>>>> Main:NJInsurancePlatform/Migrations/20221130163946_initial.Designer.cs
                            PolicyMUID = new Guid("67bb56de-01c9-42e2-b066-eea2c082f06f"),
                            Status = "status"
                        },
                        new
                        {
                            BillMUID = new Guid("9b7d532c-62a8-4a8d-96d9-6a7a80b118d4"),
                            Balance = 278.33999999999997,
<<<<<<<< HEAD:NJInsurancePlatform/Migrations/20221130222642_gxmigration.Designer.cs
                            CreatedDate = new DateTime(2022, 11, 30, 17, 26, 41, 833, DateTimeKind.Local).AddTicks(1370),
                            MinimumPayment = 449.08999999999997,
                            PolicyDueDate = new DateTime(2022, 11, 30, 17, 26, 41, 833, DateTimeKind.Local).AddTicks(1369),
========
                            CreatedDate = new DateTime(2022, 11, 30, 11, 39, 46, 102, DateTimeKind.Local).AddTicks(5213),
                            MinimumPayment = 449.08999999999997,
                            PolicyDueDate = new DateTime(2022, 11, 30, 11, 39, 46, 102, DateTimeKind.Local).AddTicks(5212),
>>>>>>>> Main:NJInsurancePlatform/Migrations/20221130163946_initial.Designer.cs
                            PolicyMUID = new Guid("46c76123-4e2c-4cce-95fa-0646268c5b1d"),
                            Status = "status"
                        });
                });

            modelBuilder.Entity("NJInsurancePlatform.Models.Claim", b =>
                {
                    b.Property<Guid>("ClaimMUID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ClaimUserDescription")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("CustomerMUID")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DateOfClaim")
                        .HasColumnType("datetime2");

                    b.Property<string>("PolicyMUID")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ClaimMUID");

                    b.ToTable("Claims");
                });

            modelBuilder.Entity("NJInsurancePlatform.Models.Customer", b =>
                {
                    b.Property<Guid>("CustomerMUID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<string>("CreatedDate")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CurrentAddress")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("CurrentCity")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("CurrentEmployer")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("CurrentState")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("CurrentZipcode")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("EmailAddress")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(140)
                        .HasColumnType("nvarchar(140)");

                    b.Property<string>("Gender")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsPrimaryPolicyHolder")
                        .HasColumnType("bit");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(140)
                        .HasColumnType("nvarchar(140)");

                    b.Property<string>("LicenseNumber")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<Guid>("PolicyMUID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("SSN")
                        .IsRequired()
                        .HasMaxLength(9)
                        .HasColumnType("nvarchar(9)");

                    b.HasKey("CustomerMUID");

                    b.ToTable("Customers");
                });

            modelBuilder.Entity("NJInsurancePlatform.Models.Faq", b =>
                {
                    b.Property<Guid>("FaqMUID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Answer")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Question")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("FaqMUID");

                    b.ToTable("Faqs");

                    b.HasData(
                        new
                        {
                            FaqMUID = new Guid("906a6638-af9b-479f-a67f-ea41c0597807"),
                            Answer = "Somerset, NJ",
                            Question = "Where Is our company based out of?"
                        },
                        new
                        {
                            FaqMUID = new Guid("1aaf2fe6-d0a2-406d-b872-878f8902c5cf"),
                            Answer = "That is your initial role when you first register.  An Admin will approve your account and set you to your appropriate role.",
                            Question = "Why is my role listed as pending?"
                        },
                        new
                        {
                            FaqMUID = new Guid("9ad2222c-e13f-4a02-a3ed-5213d1b5cbae"),
                            Answer = "Your policy must first be approved by an Admin, please check your policy again in a little while.",
                            Question = "Why is my policy listed as pending?"
                        });
                });

            modelBuilder.Entity("NJInsurancePlatform.Models.GroupRoom", b =>
                {
                    b.Property<Guid>("GroupMUID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(140)
                        .HasColumnType("nvarchar(140)");

                    b.HasKey("GroupMUID");

                    b.ToTable("GroupRooms");

                    b.HasData(
                        new
                        {
                            GroupMUID = new Guid("f4f42d43-4d51-43a9-b398-5430131efd2a"),
                            Name = "Nikosi's Group"
                        },
                        new
                        {
                            GroupMUID = new Guid("80d2744e-2de6-47cc-97d1-05f8a0794f6c"),
                            Name = "Eric's Group"
                        },
                        new
                        {
                            GroupMUID = new Guid("7e5319b1-4285-4811-bf88-c8542ac4bfa1"),
                            Name = "Leona's Group"
                        },
                        new
                        {
                            GroupMUID = new Guid("858efa88-5226-47e5-8bd0-80546b2f469d"),
                            Name = "Patrick's Group"
                        });
                });

            modelBuilder.Entity("NJInsurancePlatform.Models.GroupRoomMessage", b =>
                {
                    b.Property<Guid>("GroupRoomMessageMUID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("GroupRoomMUID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Message")
                        .IsRequired()
                        .HasMaxLength(140)
                        .HasColumnType("nvarchar(140)");

                    b.Property<Guid>("SenderMUID")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("GroupRoomMessageMUID");

                    b.ToTable("GroupRoomMessages");

                    b.HasData(
                        new
                        {
                            GroupRoomMessageMUID = new Guid("82ba35e1-0c52-4f91-8ff3-7ba15a87c237"),
                            CreatedDate = new DateTime(2022, 11, 30, 11, 39, 46, 102, DateTimeKind.Local).AddTicks(5291),
                            GroupRoomMUID = new Guid("f4f42d43-4d51-43a9-b398-5430131efd2a"),
                            Message = "Hello, And Welcome",
                            SenderMUID = new Guid("d9ef788c-a3f8-48b3-92ce-804170aba836")
                        },
                        new
                        {
                            GroupRoomMessageMUID = new Guid("7a9ff0a2-6386-4094-8ae8-9240611eef7a"),
                            CreatedDate = new DateTime(2022, 11, 30, 11, 39, 46, 102, DateTimeKind.Local).AddTicks(5295),
                            GroupRoomMUID = new Guid("80d2744e-2de6-47cc-97d1-05f8a0794f6c"),
                            Message = "yes, How Can I Help you?",
                            SenderMUID = new Guid("a7071f27-db08-47fb-a05a-0a7da44b44c4")
                        },
                        new
                        {
                            GroupRoomMessageMUID = new Guid("e857e40b-d4d6-45dc-912f-4be6fc749c2d"),
                            CreatedDate = new DateTime(2022, 11, 30, 11, 39, 46, 102, DateTimeKind.Local).AddTicks(5297),
                            GroupRoomMUID = new Guid("7e5319b1-4285-4811-bf88-c8542ac4bfa1"),
                            Message = "I have a question About My Policy",
                            SenderMUID = new Guid("a7071f27-db08-47fb-a05a-0a7da44b44c4")
                        },
                        new
                        {
                            GroupRoomMessageMUID = new Guid("4db427d8-8084-4987-9783-ef1154a0627b"),
                            CreatedDate = new DateTime(2022, 11, 30, 11, 39, 46, 102, DateTimeKind.Local).AddTicks(5298),
                            GroupRoomMUID = new Guid("858efa88-5226-47e5-8bd0-80546b2f469d"),
                            Message = "Sure, What would you like to know?",
                            SenderMUID = new Guid("93fa9038-9c45-42cf-993b-fc3d15764f18")
                        });
                });

            modelBuilder.Entity("NJInsurancePlatform.Models.Payment", b =>
                {
                    b.Property<Guid>("PaymentMUID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("AccountNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AdditionalInfo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Amount")
                        .HasColumnType("float");

                    b.Property<string>("BankName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("BillMUID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CVV")
                        .IsRequired()
                        .HasMaxLength(4)
                        .HasColumnType("nvarchar(4)");

                    b.Property<DateTime>("CardExpireDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("CardNumber")
                        .IsRequired()
                        .HasMaxLength(16)
                        .HasColumnType("nvarchar(16)");

                    b.Property<string>("CheckImage")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("CheckNumber")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("DebitOrCredit")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("PaidDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("PayerFirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PayerLastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PaymentMethod")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoutingNumber")
                        .IsRequired()
                        .HasMaxLength(9)
                        .HasColumnType("nvarchar(9)");

                    b.Property<string>("ZipCode")
                        .IsRequired()
                        .HasMaxLength(5)
                        .HasColumnType("nvarchar(5)");

                    b.HasKey("PaymentMUID");

                    b.ToTable("Payments");

                    b.HasData(
                        new
                        {
                            PaymentMUID = new Guid("d3bfa2b2-a707-412f-9c4d-cbf1ec275693"),
                            AccountNumber = "2345643",
                            AdditionalInfo = "Additional info",
                            Amount = 123.98999999999999,
                            BankName = "Spring Savings",
                            BillMUID = new Guid("f46090ed-d574-4456-8e18-97150ff885ed"),
<<<<<<<< HEAD:NJInsurancePlatform/Migrations/20221130222642_gxmigration.Designer.cs
                            CVV = "123",
                            CardExpireDate = new DateTime(2022, 11, 30, 17, 26, 41, 833, DateTimeKind.Local).AddTicks(1396),
                            CardNumber = "123498732",
                            CheckImage = "check Image",
                            CheckNumber = 123,
                            CreatedDate = new DateTime(2022, 11, 30, 17, 26, 41, 833, DateTimeKind.Local).AddTicks(1399),
                            DebitOrCredit = "debit",
                            PaidDate = new DateTime(2022, 11, 30, 17, 26, 41, 833, DateTimeKind.Local).AddTicks(1393),
========
                            CardExpireDate = new DateTime(2022, 11, 30, 11, 39, 46, 102, DateTimeKind.Local).AddTicks(5233),
                            CardNumber = "123498732",
                            CheckImage = "check Image",
                            CheckNumber = 123,
                            CreatedDate = new DateTime(2022, 11, 30, 11, 39, 46, 102, DateTimeKind.Local).AddTicks(5237),
                            DebitOrCredit = "debit",
                            PaidDate = new DateTime(2022, 11, 30, 11, 39, 46, 102, DateTimeKind.Local).AddTicks(5230),
>>>>>>>> Main:NJInsurancePlatform/Migrations/20221130163946_initial.Designer.cs
                            PayerFirstName = "Jillian",
                            PayerLastName = "Flowers",
                            PaymentMethod = "visa",
                            RoutingNumber = "2345432",
                            ZipCode = "12345"
                        },
                        new
                        {
                            PaymentMUID = new Guid("0b8e18c5-0b17-4bc1-b2a3-00abe6fb5e72"),
                            AccountNumber = "2345643",
                            AdditionalInfo = "Additional info",
                            Amount = 234.88999999999999,
                            BankName = "Peoples Savings",
                            BillMUID = new Guid("417a8279-0227-43c4-8504-c4396860ada0"),
<<<<<<<< HEAD:NJInsurancePlatform/Migrations/20221130222642_gxmigration.Designer.cs
                            CVV = "123",
                            CardExpireDate = new DateTime(2022, 11, 30, 17, 26, 41, 833, DateTimeKind.Local).AddTicks(1402),
                            CardNumber = "123498732",
                            CheckImage = "check Image",
                            CheckNumber = 345,
                            CreatedDate = new DateTime(2022, 11, 30, 17, 26, 41, 833, DateTimeKind.Local).AddTicks(1404),
                            DebitOrCredit = "credit",
                            PaidDate = new DateTime(2022, 11, 30, 17, 26, 41, 833, DateTimeKind.Local).AddTicks(1400),
========
                            CardExpireDate = new DateTime(2022, 11, 30, 11, 39, 46, 102, DateTimeKind.Local).AddTicks(5242),
                            CardNumber = "123498732",
                            CheckImage = "check Image",
                            CheckNumber = 345,
                            CreatedDate = new DateTime(2022, 11, 30, 11, 39, 46, 102, DateTimeKind.Local).AddTicks(5244),
                            DebitOrCredit = "credit",
                            PaidDate = new DateTime(2022, 11, 30, 11, 39, 46, 102, DateTimeKind.Local).AddTicks(5239),
>>>>>>>> Main:NJInsurancePlatform/Migrations/20221130163946_initial.Designer.cs
                            PayerFirstName = "Fred",
                            PayerLastName = "Sanders",
                            PaymentMethod = "mastercard",
                            RoutingNumber = "2345432",
                            ZipCode = "12345"
                        },
                        new
                        {
                            PaymentMUID = new Guid("0fc63b41-88b2-4ad9-9035-0951611d62ae"),
                            AccountNumber = "2345643",
                            AdditionalInfo = "Additional info",
                            Amount = 563.99000000000001,
                            BankName = "Bank of Nova Scotia",
                            BillMUID = new Guid("c28330de-a718-465b-9772-5b28ad6395e8"),
<<<<<<<< HEAD:NJInsurancePlatform/Migrations/20221130222642_gxmigration.Designer.cs
                            CVV = "123",
                            CardExpireDate = new DateTime(2022, 11, 30, 17, 26, 41, 833, DateTimeKind.Local).AddTicks(1408),
                            CardNumber = "123498732",
                            CheckImage = "check Image",
                            CheckNumber = 4532,
                            CreatedDate = new DateTime(2022, 11, 30, 17, 26, 41, 833, DateTimeKind.Local).AddTicks(1410),
                            DebitOrCredit = "credit",
                            PaidDate = new DateTime(2022, 11, 30, 17, 26, 41, 833, DateTimeKind.Local).AddTicks(1406),
========
                            CardExpireDate = new DateTime(2022, 11, 30, 11, 39, 46, 102, DateTimeKind.Local).AddTicks(5248),
                            CardNumber = "123498732",
                            CheckImage = "check Image",
                            CheckNumber = 4532,
                            CreatedDate = new DateTime(2022, 11, 30, 11, 39, 46, 102, DateTimeKind.Local).AddTicks(5250),
                            DebitOrCredit = "credit",
                            PaidDate = new DateTime(2022, 11, 30, 11, 39, 46, 102, DateTimeKind.Local).AddTicks(5246),
>>>>>>>> Main:NJInsurancePlatform/Migrations/20221130163946_initial.Designer.cs
                            PayerFirstName = "Phillis",
                            PayerLastName = "McMahon",
                            PaymentMethod = "visa",
                            RoutingNumber = "2345432",
                            ZipCode = "12345"
                        },
                        new
                        {
                            PaymentMUID = new Guid("0b73fbd0-eb85-42c4-a634-e8ee78d81218"),
                            AccountNumber = "2345643",
                            AdditionalInfo = "Additional info",
                            Amount = 58.990000000000002,
                            BankName = "Bank of the Oranges",
                            BillMUID = new Guid("9b7d532c-62a8-4a8d-96d9-6a7a80b118d4"),
<<<<<<<< HEAD:NJInsurancePlatform/Migrations/20221130222642_gxmigration.Designer.cs
                            CVV = "123",
                            CardExpireDate = new DateTime(2022, 11, 30, 17, 26, 41, 833, DateTimeKind.Local).AddTicks(1413),
                            CardNumber = "123498732",
                            CheckImage = "check Image",
                            CheckNumber = 9870,
                            CreatedDate = new DateTime(2022, 11, 30, 17, 26, 41, 833, DateTimeKind.Local).AddTicks(1415),
                            DebitOrCredit = "credit",
                            PaidDate = new DateTime(2022, 11, 30, 17, 26, 41, 833, DateTimeKind.Local).AddTicks(1412),
========
                            CardExpireDate = new DateTime(2022, 11, 30, 11, 39, 46, 102, DateTimeKind.Local).AddTicks(5254),
                            CardNumber = "123498732",
                            CheckImage = "check Image",
                            CheckNumber = 9870,
                            CreatedDate = new DateTime(2022, 11, 30, 11, 39, 46, 102, DateTimeKind.Local).AddTicks(5256),
                            DebitOrCredit = "credit",
                            PaidDate = new DateTime(2022, 11, 30, 11, 39, 46, 102, DateTimeKind.Local).AddTicks(5252),
>>>>>>>> Main:NJInsurancePlatform/Migrations/20221130163946_initial.Designer.cs
                            PayerFirstName = "katherine",
                            PayerLastName = "Rivera",
                            PaymentMethod = "visa",
                            RoutingNumber = "2345432",
                            ZipCode = "12345"
                        });
                });

            modelBuilder.Entity("NJInsurancePlatform.Models.Policy", b =>
                {
                    b.Property<Guid>("PolicyMUID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<double?>("AnnualLimitOfCoverage")
                        .IsRequired()
                        .HasColumnType("float");

                    b.Property<Guid>("CustomerMUID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<double?>("Deductible")
                        .IsRequired()
                        .HasColumnType("float");

                    b.Property<string>("NameOfPolicy")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<double?>("OutOfPocketLimit")
                        .IsRequired()
                        .HasColumnType("float");

                    b.Property<bool>("Pending")
                        .HasColumnType("bit");

                    b.Property<DateTime>("PolicyEnd_Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("PolicyOwner")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<double>("PolicyPaidOffAmount")
                        .HasColumnType("float");

                    b.Property<bool>("PolicyPaymentisDue")
                        .HasColumnType("bit");

                    b.Property<DateTime>("PolicyStart_Date")
                        .HasColumnType("datetime2");

                    b.Property<double>("PolicyTotalAmount")
                        .HasColumnType("float");

                    b.Property<Guid>("ProductMUID")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("PolicyMUID");

                    b.ToTable("Policies");

                    b.HasData(
                        new
                        {
                            PolicyMUID = new Guid("a61a15af-6a7d-4e82-9659-c5003721f5ea"),
                            AnnualLimitOfCoverage = 14999.99,
                            CustomerMUID = new Guid("7e46ae9d-ff19-47da-ae69-922069555efb"),
                            Deductible = 100.25,
                            NameOfPolicy = "Dental Gold",
                            OutOfPocketLimit = 999.99000000000001,
                            Pending = false,
<<<<<<<< HEAD:NJInsurancePlatform/Migrations/20221130222642_gxmigration.Designer.cs
                            PolicyEnd_Date = new DateTime(2022, 11, 30, 17, 26, 41, 833, DateTimeKind.Local).AddTicks(1304),
                            PolicyNumber = 1234,
                            PolicyOwner = "Patrick Leon",
                            PolicyPaidOffAmount = 0.0,
                            PolicyPaymentisDue = false,
                            PolicyStart_Date = new DateTime(2022, 11, 30, 17, 26, 41, 833, DateTimeKind.Local).AddTicks(1262),
                            PolicyTotalAmount = 35000.0
========
                            PolicyEnd_Date = new DateTime(2022, 11, 30, 11, 39, 46, 102, DateTimeKind.Local).AddTicks(5140),
                            PolicyOwner = "Patrick Leon",
                            PolicyPaidOffAmount = 0.0,
                            PolicyPaymentisDue = false,
                            PolicyStart_Date = new DateTime(2022, 11, 30, 11, 39, 46, 102, DateTimeKind.Local).AddTicks(5109),
                            PolicyTotalAmount = 35000.0,
                            ProductMUID = new Guid("f9097017-1c13-4590-b6bb-355418ec018e")
>>>>>>>> Main:NJInsurancePlatform/Migrations/20221130163946_initial.Designer.cs
                        },
                        new
                        {
                            PolicyMUID = new Guid("abdafd4a-48ff-4f1a-bcc6-fd3dd2c659a5"),
                            AnnualLimitOfCoverage = 14999.99,
                            CustomerMUID = new Guid("0d7a4ff8-5b33-44bf-a0fe-bd0f696187f1"),
                            Deductible = 100.25,
                            NameOfPolicy = "Health Platinum",
                            OutOfPocketLimit = 999.99000000000001,
                            Pending = false,
<<<<<<<< HEAD:NJInsurancePlatform/Migrations/20221130222642_gxmigration.Designer.cs
                            PolicyEnd_Date = new DateTime(2022, 11, 30, 17, 26, 41, 833, DateTimeKind.Local).AddTicks(1308),
                            PolicyNumber = 4567,
                            PolicyOwner = "Eric Daley",
                            PolicyPaidOffAmount = 0.0,
                            PolicyPaymentisDue = false,
                            PolicyStart_Date = new DateTime(2022, 11, 30, 17, 26, 41, 833, DateTimeKind.Local).AddTicks(1307),
                            PolicyTotalAmount = 35000.0
========
                            PolicyEnd_Date = new DateTime(2022, 11, 30, 11, 39, 46, 102, DateTimeKind.Local).AddTicks(5146),
                            PolicyOwner = "Eric Daley",
                            PolicyPaidOffAmount = 0.0,
                            PolicyPaymentisDue = false,
                            PolicyStart_Date = new DateTime(2022, 11, 30, 11, 39, 46, 102, DateTimeKind.Local).AddTicks(5144),
                            PolicyTotalAmount = 35000.0,
                            ProductMUID = new Guid("4744efb6-564d-42ff-8ebd-e86fce1b3ccf")
>>>>>>>> Main:NJInsurancePlatform/Migrations/20221130163946_initial.Designer.cs
                        },
                        new
                        {
                            PolicyMUID = new Guid("67bb56de-01c9-42e2-b066-eea2c082f06f"),
                            AnnualLimitOfCoverage = 14999.99,
                            CustomerMUID = new Guid("f71979e2-b649-4fbc-bc63-3bafa1d65176"),
                            Deductible = 100.25,
                            NameOfPolicy = "Eye Emarald",
                            OutOfPocketLimit = 999.99000000000001,
                            Pending = false,
<<<<<<<< HEAD:NJInsurancePlatform/Migrations/20221130222642_gxmigration.Designer.cs
                            PolicyEnd_Date = new DateTime(2022, 11, 30, 17, 26, 41, 833, DateTimeKind.Local).AddTicks(1312),
                            PolicyNumber = 78910,
                            PolicyOwner = "Nikosi Thom",
                            PolicyPaidOffAmount = 0.0,
                            PolicyPaymentisDue = false,
                            PolicyStart_Date = new DateTime(2022, 11, 30, 17, 26, 41, 833, DateTimeKind.Local).AddTicks(1310),
                            PolicyTotalAmount = 35000.0
========
                            PolicyEnd_Date = new DateTime(2022, 11, 30, 11, 39, 46, 102, DateTimeKind.Local).AddTicks(5150),
                            PolicyOwner = "Nikosi Thom",
                            PolicyPaidOffAmount = 0.0,
                            PolicyPaymentisDue = false,
                            PolicyStart_Date = new DateTime(2022, 11, 30, 11, 39, 46, 102, DateTimeKind.Local).AddTicks(5148),
                            PolicyTotalAmount = 35000.0,
                            ProductMUID = new Guid("821f419a-f7e2-4aa7-b6f2-e4d885afdeda")
>>>>>>>> Main:NJInsurancePlatform/Migrations/20221130163946_initial.Designer.cs
                        },
                        new
                        {
                            PolicyMUID = new Guid("46c76123-4e2c-4cce-95fa-0646268c5b1d"),
                            AnnualLimitOfCoverage = 14999.99,
                            CustomerMUID = new Guid("3498cdd0-6913-4c08-b29f-5291f28201ce"),
                            Deductible = 100.25,
                            NameOfPolicy = "Eye Emarald",
                            OutOfPocketLimit = 999.99000000000001,
                            Pending = false,
<<<<<<<< HEAD:NJInsurancePlatform/Migrations/20221130222642_gxmigration.Designer.cs
                            PolicyEnd_Date = new DateTime(2022, 11, 30, 17, 26, 41, 833, DateTimeKind.Local).AddTicks(1315),
                            PolicyNumber = 769564,
                            PolicyOwner = "Leona wilson",
                            PolicyPaidOffAmount = 0.0,
                            PolicyPaymentisDue = false,
                            PolicyStart_Date = new DateTime(2022, 11, 30, 17, 26, 41, 833, DateTimeKind.Local).AddTicks(1314),
                            PolicyTotalAmount = 35000.0
========
                            PolicyEnd_Date = new DateTime(2022, 11, 30, 11, 39, 46, 102, DateTimeKind.Local).AddTicks(5154),
                            PolicyOwner = "Leona wilson",
                            PolicyPaidOffAmount = 0.0,
                            PolicyPaymentisDue = false,
                            PolicyStart_Date = new DateTime(2022, 11, 30, 11, 39, 46, 102, DateTimeKind.Local).AddTicks(5152),
                            PolicyTotalAmount = 35000.0,
                            ProductMUID = new Guid("e4a9822a-2cc4-4f9d-bcee-57dbdbf07b58")
>>>>>>>> Main:NJInsurancePlatform/Migrations/20221130163946_initial.Designer.cs
                        });
                });

            modelBuilder.Entity("NJInsurancePlatform.Models.PolicyRequest", b =>
                {
                    b.Property<Guid>("RequestMUID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("CustomerMUID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("PolicyMUID")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("RequestMUID");

                    b.ToTable("PolicyRequests");
                });

            modelBuilder.Entity("NJInsurancePlatform.Models.Product", b =>
                {
                    b.Property<Guid>("ProductMUID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<double?>("AnnualLimitOfCoverage")
                        .IsRequired()
                        .HasColumnType("float");

                    b.Property<double?>("Deductible")
                        .IsRequired()
                        .HasColumnType("float");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<double?>("OutOfPocketLimit")
                        .IsRequired()
                        .HasColumnType("float");

                    b.Property<double>("PolicyPaidOffAmount")
                        .HasColumnType("float");

                    b.Property<double>("PolicyTotalAmount")
                        .HasColumnType("float");

                    b.Property<double?>("Price")
                        .IsRequired()
                        .HasColumnType("float");

                    b.Property<string>("ProductName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ProductMUID");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
<<<<<<<< HEAD:NJInsurancePlatform/Migrations/20221130222642_gxmigration.Designer.cs
                            ProductMUID = new Guid("419f6e4f-cb20-4d50-a931-f9e64f13fcbb"),
========
                            ProductMUID = new Guid("f9097017-1c13-4590-b6bb-355418ec018e"),
>>>>>>>> Main:NJInsurancePlatform/Migrations/20221130163946_initial.Designer.cs
                            AnnualLimitOfCoverage = 14999.99,
                            Deductible = 100.25,
                            Description = "Lorus Plorem enum taknut",
                            OutOfPocketLimit = 999.99000000000001,
                            PolicyPaidOffAmount = 0.0,
                            PolicyTotalAmount = 10000.0,
                            Price = 2343.0,
                            ProductName = "DentalGold"
                        },
                        new
                        {
<<<<<<<< HEAD:NJInsurancePlatform/Migrations/20221130222642_gxmigration.Designer.cs
                            ProductMUID = new Guid("38290d76-1c38-4c9d-b33f-cf6abf4797fc"),
========
                            ProductMUID = new Guid("4744efb6-564d-42ff-8ebd-e86fce1b3ccf"),
>>>>>>>> Main:NJInsurancePlatform/Migrations/20221130163946_initial.Designer.cs
                            AnnualLimitOfCoverage = 25999.990000000002,
                            Deductible = 200.15000000000001,
                            Description = "Enum Zelgar Phlnnub nilsup",
                            OutOfPocketLimit = 999.99000000000001,
                            PolicyPaidOffAmount = 0.0,
                            PolicyTotalAmount = 150000.0,
                            Price = 3343.0,
                            ProductName = "Health Platinum"
                        },
                        new
                        {
<<<<<<<< HEAD:NJInsurancePlatform/Migrations/20221130222642_gxmigration.Designer.cs
                            ProductMUID = new Guid("16798f0b-3ab3-4c0a-972f-3cc8fe17e4ba"),
========
                            ProductMUID = new Guid("821f419a-f7e2-4aa7-b6f2-e4d885afdeda"),
>>>>>>>> Main:NJInsurancePlatform/Migrations/20221130163946_initial.Designer.cs
                            AnnualLimitOfCoverage = 1345.99,
                            Deductible = 50.670000000000002,
                            Description = "Lorus Plorem enum taknut",
                            OutOfPocketLimit = 1200.45,
                            PolicyPaidOffAmount = 0.0,
                            PolicyTotalAmount = 2000.0,
                            Price = 789.0,
                            ProductName = "Eye Emerald"
                        },
                        new
                        {
<<<<<<<< HEAD:NJInsurancePlatform/Migrations/20221130222642_gxmigration.Designer.cs
                            ProductMUID = new Guid("7c7d7e6b-a8f8-4cb5-8895-63fffedb8089"),
========
                            ProductMUID = new Guid("e4a9822a-2cc4-4f9d-bcee-57dbdbf07b58"),
>>>>>>>> Main:NJInsurancePlatform/Migrations/20221130163946_initial.Designer.cs
                            AnnualLimitOfCoverage = 5345.9899999999998,
                            Deductible = 160.69,
                            Description = "Bupka ladna velnup halstus",
                            OutOfPocketLimit = 5600.4499999999998,
                            PolicyPaidOffAmount = 0.0,
                            PolicyTotalAmount = 100000.0,
                            Price = 1200.98,
                            ProductName = "Empoyee Individual"
                        });
                });

            modelBuilder.Entity("NJInsurancePlatform.Models.Transaction", b =>
                {
                    b.Property<Guid>("TransactionMUID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CustomerMUID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<double>("PaymentAmount")
                        .HasColumnType("float");

                    b.Property<DateTime>("PaymentDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("PolicyMUID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("isPaymentComplete")
                        .HasColumnType("bit");

                    b.HasKey("TransactionMUID");

                    b.ToTable("Transactions");

                    b.HasData(
                        new
                        {
                            TransactionMUID = new Guid("76098a5e-bcda-46be-9cf3-a19f24d14018"),
                            CustomerMUID = new Guid("7e46ae9d-ff19-47da-ae69-922069555efb"),
                            PaymentAmount = 1199.78,
<<<<<<<< HEAD:NJInsurancePlatform/Migrations/20221130222642_gxmigration.Designer.cs
                            PaymentDate = new DateTime(2022, 11, 30, 17, 26, 41, 833, DateTimeKind.Local).AddTicks(1332),
========
                            PaymentDate = new DateTime(2022, 11, 30, 11, 39, 46, 102, DateTimeKind.Local).AddTicks(5172),
>>>>>>>> Main:NJInsurancePlatform/Migrations/20221130163946_initial.Designer.cs
                            PolicyMUID = new Guid("a61a15af-6a7d-4e82-9659-c5003721f5ea"),
                            isPaymentComplete = true
                        },
                        new
                        {
                            TransactionMUID = new Guid("530f62a1-8730-4784-bb71-a257136dd9f6"),
                            CustomerMUID = new Guid("0d7a4ff8-5b33-44bf-a0fe-bd0f696187f1"),
                            PaymentAmount = 2109.7800000000002,
<<<<<<<< HEAD:NJInsurancePlatform/Migrations/20221130222642_gxmigration.Designer.cs
                            PaymentDate = new DateTime(2022, 11, 30, 17, 26, 41, 833, DateTimeKind.Local).AddTicks(1335),
========
                            PaymentDate = new DateTime(2022, 11, 30, 11, 39, 46, 102, DateTimeKind.Local).AddTicks(5175),
>>>>>>>> Main:NJInsurancePlatform/Migrations/20221130163946_initial.Designer.cs
                            PolicyMUID = new Guid("abdafd4a-48ff-4f1a-bcc6-fd3dd2c659a5"),
                            isPaymentComplete = true
                        },
                        new
                        {
                            TransactionMUID = new Guid("f752a2a0-7300-42ba-beab-dc65992ca945"),
                            CustomerMUID = new Guid("f71979e2-b649-4fbc-bc63-3bafa1d65176"),
                            PaymentAmount = 109.08,
<<<<<<<< HEAD:NJInsurancePlatform/Migrations/20221130222642_gxmigration.Designer.cs
                            PaymentDate = new DateTime(2022, 11, 30, 17, 26, 41, 833, DateTimeKind.Local).AddTicks(1337),
========
                            PaymentDate = new DateTime(2022, 11, 30, 11, 39, 46, 102, DateTimeKind.Local).AddTicks(5177),
>>>>>>>> Main:NJInsurancePlatform/Migrations/20221130163946_initial.Designer.cs
                            PolicyMUID = new Guid("67bb56de-01c9-42e2-b066-eea2c082f06f"),
                            isPaymentComplete = false
                        },
                        new
                        {
                            TransactionMUID = new Guid("3287bca8-d9dc-4f75-94ca-227cfb4c72da"),
                            CustomerMUID = new Guid("3498cdd0-6913-4c08-b29f-5291f28201ce"),
                            PaymentAmount = 189.05000000000001,
<<<<<<<< HEAD:NJInsurancePlatform/Migrations/20221130222642_gxmigration.Designer.cs
                            PaymentDate = new DateTime(2022, 11, 30, 17, 26, 41, 833, DateTimeKind.Local).AddTicks(1339),
========
                            PaymentDate = new DateTime(2022, 11, 30, 11, 39, 46, 102, DateTimeKind.Local).AddTicks(5179),
>>>>>>>> Main:NJInsurancePlatform/Migrations/20221130163946_initial.Designer.cs
                            PolicyMUID = new Guid("46c76123-4e2c-4cce-95fa-0646268c5b1d"),
                            isPaymentComplete = false
                        });
                });

            modelBuilder.Entity("NJInsurancePlatform.Models.ApplicationUser", b =>
                {
                    b.HasBaseType("Microsoft.AspNetCore.Identity.IdentityUser");

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<Guid?>("BeneficiaryMUID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("CurrentAddress")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("CurrentCity")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("CurrentEmployer")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("CurrentState")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("CurrentZipcode")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<Guid?>("CustomerMUID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("DOB")
                        .HasColumnType("datetime2");

                    b.Property<string>("EmailAddress")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("FirstName")
                        .HasMaxLength(140)
                        .HasColumnType("nvarchar(140)");

                    b.Property<string>("Gender")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsPrimaryPolicyHolder")
                        .HasColumnType("bit");

                    b.Property<string>("LastName")
                        .HasMaxLength(140)
                        .HasColumnType("nvarchar(140)");

                    b.Property<string>("LicenseNumber")
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.Property<Guid?>("PolicyMUID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("SSN")
                        .HasMaxLength(11)
                        .HasColumnType("nvarchar(11)");

                    b.HasDiscriminator().HasValue("ApplicationUser");

                    b.HasData(
                        new
                        {
                            Id = "8e445865-a24d-4543-a6c6-9443d048cdb9",
                            AccessFailedCount = 0,
<<<<<<<< HEAD:NJInsurancePlatform/Migrations/20221130222642_gxmigration.Designer.cs
                            ConcurrencyStamp = "0d0384a0-49bc-42eb-be82-e0cc98c29bb9",
                            EmailConfirmed = false,
                            LockoutEnabled = false,
                            NormalizedUserName = "ADMIN",
                            PasswordHash = "AQAAAAEAACcQAAAAEGRTds+G5mKr+TRIRGvhRKAuhJQXI4RqO1wIYskV74he7Iq3d2dC+SbJ/X1MumZvLw==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "94197e2b-c387-46d1-9c67-4f5c1098cacb",
========
                            ConcurrencyStamp = "4ed1322d-b5cf-4d72-84f5-688b7b26c235",
                            EmailConfirmed = false,
                            LockoutEnabled = false,
                            NormalizedUserName = "ADMIN",
                            PasswordHash = "AQAAAAEAACcQAAAAEOMJ/7dzFwPqroW9cI/uhP6D2O6RdWa3BkCmwxyNNmn3ibpvIOyV1qYBQ47SFaSFKQ==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "472ecdce-8099-4658-803e-dd444f7479ad",
>>>>>>>> Main:NJInsurancePlatform/Migrations/20221130163946_initial.Designer.cs
                            TwoFactorEnabled = false,
                            UserName = "admin",
                            Active = false,
                            DOB = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EmailAddress = "admin",
                            IsPrimaryPolicyHolder = false
                        },
                        new
                        {
                            Id = "8e445865-a24d-4543-a6c6-9443d048cdb7",
                            AccessFailedCount = 0,
<<<<<<<< HEAD:NJInsurancePlatform/Migrations/20221130222642_gxmigration.Designer.cs
                            ConcurrencyStamp = "d778cafe-c32b-419b-a116-4930eec22fb6",
                            EmailConfirmed = false,
                            LockoutEnabled = false,
                            NormalizedUserName = "CUSTOMER",
                            PasswordHash = "AQAAAAEAACcQAAAAEMu6Bz4iRSeCRZ/xdfCg1v1qI8iZCAUa64islmCTVS6TorIXxz/hiLxr+6m3q6w3Zg==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "597f512e-7463-4d8d-8cd9-816c894819bc",
========
                            ConcurrencyStamp = "117b37f2-0995-4608-a277-528b3919e8ec",
                            EmailConfirmed = false,
                            LockoutEnabled = false,
                            NormalizedUserName = "CUSTOMER",
                            PasswordHash = "AQAAAAEAACcQAAAAEDwvErrj+M45qUTPWODF9zGfeJbdNRXA1OUS/HYpXMvHgEUh12hN3McXuewGCyuI7w==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "8008d7b5-50ca-4c92-af1e-19cf5cc220e6",
>>>>>>>> Main:NJInsurancePlatform/Migrations/20221130163946_initial.Designer.cs
                            TwoFactorEnabled = false,
                            UserName = "customer",
                            Active = false,
                            DOB = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EmailAddress = "customer",
                            IsPrimaryPolicyHolder = false
                        },
                        new
                        {
                            Id = "8e445865-a24d-4543-a6c6-9443d048cdb8",
                            AccessFailedCount = 0,
<<<<<<<< HEAD:NJInsurancePlatform/Migrations/20221130222642_gxmigration.Designer.cs
                            ConcurrencyStamp = "0479f441-00a2-4261-be2b-74a2f1b5e1d0",
                            EmailConfirmed = false,
                            LockoutEnabled = false,
                            NormalizedUserName = "BENEFICIARY",
                            PasswordHash = "AQAAAAEAACcQAAAAEFCUYI9DHlVTyYg+g2WoyoQ58E0sQTb7SwKW15sTRfSHqHs3jlchdYHxQCcb4Pir8g==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "62384a69-bd94-4bb7-8f63-2244f82b7daa",
========
                            ConcurrencyStamp = "f2d50f1f-227a-4191-a578-7c916df73d32",
                            EmailConfirmed = false,
                            LockoutEnabled = false,
                            NormalizedUserName = "BENEFICIARY",
                            PasswordHash = "AQAAAAEAACcQAAAAEMHyzEuX6U5xvPZef2oeYdKiT56n4PrguWJqMawNP8e+3q1khVMuj19lRVgrqmM6lg==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "d030f2c5-61fd-4dab-8fe2-f918f703fa14",
>>>>>>>> Main:NJInsurancePlatform/Migrations/20221130163946_initial.Designer.cs
                            TwoFactorEnabled = false,
                            UserName = "beneficiary",
                            Active = false,
                            DOB = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EmailAddress = "beneficiary",
                            IsPrimaryPolicyHolder = false
                        },
                        new
                        {
<<<<<<<< HEAD:NJInsurancePlatform/Migrations/20221130222642_gxmigration.Designer.cs
                            Id = "cfdb5e3f-6932-44c4-96fa-49c904691038",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "7241963e-74af-4e35-8e38-a89a1d142fcd",
                            EmailConfirmed = false,
                            LockoutEnabled = false,
                            NormalizedUserName = "PATO",
                            PasswordHash = "AQAAAAEAACcQAAAAELpuErlnDBxgJ3DKx1gJJo5hhHmkvwHOKWY1zjQOqFN9UQvZarnZxJVjF4hjVpoJ7Q==",
                            PhoneNumber = "2019878709",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "14316c93-7f5e-47b2-bf84-f51910917675",
                            TwoFactorEnabled = false,
                            UserName = "Pato",
                            Active = true,
                            CreatedDate = new DateTime(2022, 11, 30, 17, 26, 41, 836, DateTimeKind.Local).AddTicks(2988),
========
                            Id = "7df548f2-8144-4536-a0cf-f979c231ae0e",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "25e8afd8-1ada-4ea7-802d-dbfc0abf6e09",
                            EmailConfirmed = false,
                            LockoutEnabled = false,
                            NormalizedUserName = "PATO",
                            PasswordHash = "AQAAAAEAACcQAAAAEN2cyS6YEpROfh2QqF8zXT1xjV84MuW16A+KHnuwsKLtClhFRBKBKsyzy4Hoid2X6w==",
                            PhoneNumber = "2019878709",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "a9f28df3-fdcc-43f5-90c4-168ad5de383d",
                            TwoFactorEnabled = false,
                            UserName = "Pato",
                            Active = true,
                            CreatedDate = new DateTime(2022, 11, 30, 11, 39, 46, 125, DateTimeKind.Local).AddTicks(155),
>>>>>>>> Main:NJInsurancePlatform/Migrations/20221130163946_initial.Designer.cs
                            CurrentAddress = "123 Elm street",
                            CurrentCity = "Milwaukee",
                            CurrentEmployer = "Alphabet Corp",
                            CurrentState = "Wisconsin",
                            CurrentZipcode = "7897678",
                            CustomerMUID = new Guid("7e46ae9d-ff19-47da-ae69-922069555efb"),
                            DOB = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EmailAddress = "PatrickL@mymail.com",
                            FirstName = "Patrick",
                            Gender = "male",
                            IsPrimaryPolicyHolder = true,
                            LastName = "Leon",
                            LicenseNumber = "39kh8087hf",
                            PolicyMUID = new Guid("a61a15af-6a7d-4e82-9659-c5003721f5ea"),
                            SSN = "123456789"
                        },
                        new
                        {
<<<<<<<< HEAD:NJInsurancePlatform/Migrations/20221130222642_gxmigration.Designer.cs
                            Id = "fb359e2e-46b4-4734-8f26-4609cdc367d4",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "78a7c33e-a5fc-43a1-9b2a-98f3e138b1f7",
                            EmailConfirmed = false,
                            LockoutEnabled = false,
                            NormalizedUserName = "ERICD@MYMAIL.COM",
                            PasswordHash = "AQAAAAEAACcQAAAAEF+eXlpZ6oJCYRwZsNigXIwSGSbkVxNyAg/RW2+Vj1pby2YYU2ywkqR0gDHD4cYpjQ==",
                            PhoneNumber = "8790985467",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "137d92dd-acf4-4969-8885-580159f06b77",
                            TwoFactorEnabled = false,
                            UserName = "EricD@mymail.com",
                            Active = true,
                            CreatedDate = new DateTime(2022, 11, 30, 17, 26, 41, 837, DateTimeKind.Local).AddTicks(4215),
========
                            Id = "04b44a8c-9a4c-4834-b712-61bec619b545",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "e2a1277e-f039-4357-ade5-fcf12fc5d330",
                            EmailConfirmed = false,
                            LockoutEnabled = false,
                            NormalizedUserName = "ERICD@MYMAIL.COM",
                            PasswordHash = "AQAAAAEAACcQAAAAEJhCYDL3MHBFrzkbqmZ5iLqCw1u50rTt2iwQlyC+7HB0UdFxMz1IuC4sMobUk6OnNw==",
                            PhoneNumber = "8790985467",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "054b0998-5049-47aa-bdf3-421d49dca830",
                            TwoFactorEnabled = false,
                            UserName = "EricD@mymail.com",
                            Active = true,
                            CreatedDate = new DateTime(2022, 11, 30, 11, 39, 46, 133, DateTimeKind.Local).AddTicks(2893),
>>>>>>>> Main:NJInsurancePlatform/Migrations/20221130163946_initial.Designer.cs
                            CurrentAddress = "456 main street",
                            CurrentCity = "Baltimore",
                            CurrentEmployer = "Xillon Co",
                            CurrentState = "Maryland",
                            CurrentZipcode = "7897678",
                            CustomerMUID = new Guid("0d7a4ff8-5b33-44bf-a0fe-bd0f696187f1"),
                            DOB = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EmailAddress = "EricD@mymail.com",
                            FirstName = "Eric",
                            Gender = "male",
                            IsPrimaryPolicyHolder = true,
                            LastName = "Daley",
                            LicenseNumber = "39kh8087hf",
                            PolicyMUID = new Guid("abdafd4a-48ff-4f1a-bcc6-fd3dd2c659a5"),
                            SSN = "123456789"
                        },
                        new
                        {
<<<<<<<< HEAD:NJInsurancePlatform/Migrations/20221130222642_gxmigration.Designer.cs
                            Id = "ce214807-51a0-4cce-9470-ed2fa5c9d1f6",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "7846b0e0-bbfe-4cc9-94ce-84923982d215",
                            EmailConfirmed = false,
                            LockoutEnabled = false,
                            NormalizedUserName = "NIKOSIT@MYMAIL.COM",
                            PasswordHash = "AQAAAAEAACcQAAAAECCG02KTOX6k4X8dShvB6XDtIKwLqrQHojx5CVh8GQ7WCDW0SnC79ZQpi8fFdL0vYQ==",
                            PhoneNumber = "8790985467",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "2dd28934-29a1-4f87-b9d5-af7d73674d2b",
                            TwoFactorEnabled = false,
                            UserName = "NikosiT@mymail.com",
                            Active = true,
                            CreatedDate = new DateTime(2022, 11, 30, 17, 26, 41, 838, DateTimeKind.Local).AddTicks(6259),
========
                            Id = "63735308-4e1e-4738-9002-ebca7ed3b52c",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "89c2f7f0-eb9b-4302-86f2-8824ccdaf118",
                            EmailConfirmed = false,
                            LockoutEnabled = false,
                            NormalizedUserName = "NIKOSIT@MYMAIL.COM",
                            PasswordHash = "AQAAAAEAACcQAAAAENDdWZiastkNCHuXicp5LMYjjHi6YSnidOAQjHX695FNWjQ/o7c9R4cLVzs8ChFJ+A==",
                            PhoneNumber = "8790985467",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "485e2b2c-bb15-42e8-ada4-9d98e18f0e95",
                            TwoFactorEnabled = false,
                            UserName = "NikosiT@mymail.com",
                            Active = true,
                            CreatedDate = new DateTime(2022, 11, 30, 11, 39, 46, 140, DateTimeKind.Local).AddTicks(3700),
>>>>>>>> Main:NJInsurancePlatform/Migrations/20221130163946_initial.Designer.cs
                            CurrentAddress = "789 Grove street",
                            CurrentCity = "Rockville",
                            CurrentEmployer = "techumseh International",
                            CurrentState = "Maryland",
                            CurrentZipcode = "7897678",
                            CustomerMUID = new Guid("f71979e2-b649-4fbc-bc63-3bafa1d65176"),
                            DOB = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EmailAddress = "NikosiT@mymail.com",
                            FirstName = "Nikosi",
                            Gender = "female",
                            IsPrimaryPolicyHolder = true,
                            LastName = "Thom",
                            LicenseNumber = "39kh8087hf",
                            PolicyMUID = new Guid("67bb56de-01c9-42e2-b066-eea2c082f06f"),
                            SSN = "123456789"
                        },
                        new
                        {
<<<<<<<< HEAD:NJInsurancePlatform/Migrations/20221130222642_gxmigration.Designer.cs
                            Id = "481d2d38-a518-4f83-9650-0b7de0a80dfd",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "32d7beef-096d-427e-af5d-c1b17b27d1ac",
                            EmailConfirmed = false,
                            LockoutEnabled = false,
                            NormalizedUserName = "LEONAW@MYMAIL.COM",
                            PasswordHash = "AQAAAAEAACcQAAAAEBxThB102GsNgeTAAwChCIHIJiR2SRLjIfcoXhmhIUTa50GZlltGCTFrVP44ILnCAQ==",
                            PhoneNumber = "8790985467",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "717ce062-60d1-468a-b3d2-9cbf0c89227e",
                            TwoFactorEnabled = false,
                            UserName = "LeonaW@mymail.com",
                            Active = true,
                            CreatedDate = new DateTime(2022, 11, 30, 17, 26, 41, 839, DateTimeKind.Local).AddTicks(6596),
========
                            Id = "040ba841-bb3a-44f6-bdda-3ee9731218f2",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "e7496894-3641-44b0-86ad-e0366014d697",
                            EmailConfirmed = false,
                            LockoutEnabled = false,
                            NormalizedUserName = "LEONAW@MYMAIL.COM",
                            PasswordHash = "AQAAAAEAACcQAAAAECbZw7qjq3WOudhCj2yDhkLHdIM0o9Uy7lG8qLETsgO/FAl3AYH3SbYPybJUC6XT0Q==",
                            PhoneNumber = "8790985467",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "0d5df980-3afe-418f-893d-d908d52b7d21",
                            TwoFactorEnabled = false,
                            UserName = "LeonaW@mymail.com",
                            Active = true,
                            CreatedDate = new DateTime(2022, 11, 30, 11, 39, 46, 147, DateTimeKind.Local).AddTicks(8401),
>>>>>>>> Main:NJInsurancePlatform/Migrations/20221130163946_initial.Designer.cs
                            CurrentAddress = "3464 Brinkly street",
                            CurrentCity = "Gathersburg",
                            CurrentEmployer = "Brimson distributers",
                            CurrentState = "Maryland",
                            CurrentZipcode = "7897678",
                            CustomerMUID = new Guid("3498cdd0-6913-4c08-b29f-5291f28201ce"),
                            DOB = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EmailAddress = "LeonaW@mymail.com",
                            FirstName = "Leona",
                            Gender = "female",
                            IsPrimaryPolicyHolder = true,
                            LastName = "Wilson",
                            LicenseNumber = "39kh8087hf",
                            PolicyMUID = new Guid("46c76123-4e2c-4cce-95fa-0646268c5b1d"),
                            SSN = "123456789"
                        },
                        new
                        {
<<<<<<<< HEAD:NJInsurancePlatform/Migrations/20221130222642_gxmigration.Designer.cs
                            Id = "32b894d6-5027-4b30-8c1e-b5f21d15cf6b",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "8f472c46-3069-4e8a-914a-0bfd25009a9e",
                            EmailConfirmed = false,
                            LockoutEnabled = false,
                            NormalizedUserName = "ANDREAB@MYMAIL.COM",
                            PasswordHash = "AQAAAAEAACcQAAAAEF2w4ZsZTeynDeLJKnaj0frk1wX2UImeMw6UeQOD64NSPoXKt0i5nWPoGM+oQ09X3Q==",
                            PhoneNumber = "8790985467",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "c3e852ae-0a73-4899-b3b4-4d5420e1c510",
========
                            Id = "8b7eb503-35d6-4e1c-9339-374b4c4a6672",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "67ef69e8-40a8-47cf-ac1e-9e89437dbbfb",
                            EmailConfirmed = false,
                            LockoutEnabled = false,
                            NormalizedUserName = "ANDREAB@MYMAIL.COM",
                            PasswordHash = "AQAAAAEAACcQAAAAEIQGXcGntsNghh02lMygetg0e86UGpsgrrJAORF8RuvtEo3vWLPJt3gZurfern/QNw==",
                            PhoneNumber = "8790985467",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "58934c7f-58cc-4df9-9a6c-8dadb81e81a9",
>>>>>>>> Main:NJInsurancePlatform/Migrations/20221130163946_initial.Designer.cs
                            TwoFactorEnabled = false,
                            UserName = "AndreaB@mymail.com",
                            Active = true,
                            BeneficiaryMUID = new Guid("6808f1f0-47c1-4136-b775-b1f6ffc541fd"),
<<<<<<<< HEAD:NJInsurancePlatform/Migrations/20221130222642_gxmigration.Designer.cs
                            CreatedDate = new DateTime(2022, 11, 30, 17, 26, 41, 840, DateTimeKind.Local).AddTicks(7157),
========
                            CreatedDate = new DateTime(2022, 11, 30, 11, 39, 46, 155, DateTimeKind.Local).AddTicks(2453),
>>>>>>>> Main:NJInsurancePlatform/Migrations/20221130163946_initial.Designer.cs
                            CustomerMUID = new Guid("7e46ae9d-ff19-47da-ae69-922069555efb"),
                            DOB = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EmailAddress = "AndreaB@mymail.com",
                            FirstName = "Andrea",
                            Gender = "female",
                            IsPrimaryPolicyHolder = false,
                            LastName = "Bogataw",
                            LicenseNumber = "39kh8087hf",
                            SSN = "123456789"
                        },
                        new
                        {
<<<<<<<< HEAD:NJInsurancePlatform/Migrations/20221130222642_gxmigration.Designer.cs
                            Id = "adaa93cd-694e-4be2-8289-d2b4822d7446",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "d1da8389-e599-4a5d-a9f6-107eeae95ab2",
                            EmailConfirmed = false,
                            LockoutEnabled = false,
                            NormalizedUserName = "CYNTHIAS@MYMAIL.COM",
                            PasswordHash = "AQAAAAEAACcQAAAAEI4K4HbpzkvxOg3dQcoaoKX+g8mV/F6tz5+VnW9ZVo0DiyjoJgLNvUUgJKMInMrXxw==",
                            PhoneNumber = "8790985467",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "2b9a9434-060f-4c48-8342-02c0728fcb64",
========
                            Id = "fc82c6b9-10ec-4ace-b819-d7fbfee4cf56",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "f1120581-f92c-4dc1-b179-15ad03b59caa",
                            EmailConfirmed = false,
                            LockoutEnabled = false,
                            NormalizedUserName = "CYNTHIAS@MYMAIL.COM",
                            PasswordHash = "AQAAAAEAACcQAAAAEB3DMW/cZbiWYJqxvwAmCCNJz+oehFqYSNEPJmM5Q23I4zkD0QaOUf7WW+ANWThIiQ==",
                            PhoneNumber = "8790985467",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "f9ff08bb-f604-443b-aba1-07ffe096e1eb",
>>>>>>>> Main:NJInsurancePlatform/Migrations/20221130163946_initial.Designer.cs
                            TwoFactorEnabled = false,
                            UserName = "CynthiaS@mymail.com",
                            Active = true,
                            BeneficiaryMUID = new Guid("54d5eae1-ee39-4f2d-8535-5f610d2e1cff"),
<<<<<<<< HEAD:NJInsurancePlatform/Migrations/20221130222642_gxmigration.Designer.cs
                            CreatedDate = new DateTime(2022, 11, 30, 17, 26, 41, 841, DateTimeKind.Local).AddTicks(7479),
========
                            CreatedDate = new DateTime(2022, 11, 30, 11, 39, 46, 163, DateTimeKind.Local).AddTicks(601),
>>>>>>>> Main:NJInsurancePlatform/Migrations/20221130163946_initial.Designer.cs
                            CustomerMUID = new Guid("0d7a4ff8-5b33-44bf-a0fe-bd0f696187f1"),
                            DOB = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EmailAddress = "CynthiaS@mymail.com",
                            FirstName = "Cynthia",
                            Gender = "female",
                            IsPrimaryPolicyHolder = false,
                            LastName = "Smithers",
                            LicenseNumber = "39k8ew8087hf",
                            SSN = "123456789"
                        },
                        new
                        {
<<<<<<<< HEAD:NJInsurancePlatform/Migrations/20221130222642_gxmigration.Designer.cs
                            Id = "4015a99f-444c-440d-96b6-6e29bb72586a",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "b8f89d17-fe9a-4026-a3b3-dcb912d4dc74",
                            EmailConfirmed = false,
                            LockoutEnabled = false,
                            NormalizedUserName = "BRITNEYG@MYMAIL.COM",
                            PasswordHash = "AQAAAAEAACcQAAAAEAfnt87weDnboL5I2SM70X7AsTPczOtd9YnxihYelEeEYJWWvGIa47R4j8JE7BKIXw==",
                            PhoneNumber = "8790985467",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "5d31fe4e-4cfb-4218-ac88-43e72e5cff11",
========
                            Id = "d7a10c84-450f-42ea-a601-9e0ea61c3b98",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "4f139719-103d-4cfe-810f-2622419bf941",
                            EmailConfirmed = false,
                            LockoutEnabled = false,
                            NormalizedUserName = "BRITNEYG@MYMAIL.COM",
                            PasswordHash = "AQAAAAEAACcQAAAAEEtPVjQQXIESEaRsuZQWwueQs9CuR6mRGi2PAIx/yD1nShOIo7Dbdixk7/1v6XZQEg==",
                            PhoneNumber = "8790985467",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "2b57f086-1c3a-4463-bad0-daf7089b00c8",
>>>>>>>> Main:NJInsurancePlatform/Migrations/20221130163946_initial.Designer.cs
                            TwoFactorEnabled = false,
                            UserName = "BritneyG@mymail.com",
                            Active = true,
                            BeneficiaryMUID = new Guid("78d9cd41-acde-48fc-baa9-29b5065af159"),
<<<<<<<< HEAD:NJInsurancePlatform/Migrations/20221130222642_gxmigration.Designer.cs
                            CreatedDate = new DateTime(2022, 11, 30, 17, 26, 41, 842, DateTimeKind.Local).AddTicks(8002),
========
                            CreatedDate = new DateTime(2022, 11, 30, 11, 39, 46, 170, DateTimeKind.Local).AddTicks(6076),
>>>>>>>> Main:NJInsurancePlatform/Migrations/20221130163946_initial.Designer.cs
                            CustomerMUID = new Guid("f71979e2-b649-4fbc-bc63-3bafa1d65176"),
                            DOB = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EmailAddress = "BritneyG@mymail.com",
                            FirstName = "Brittney",
                            Gender = "female",
                            IsPrimaryPolicyHolder = false,
                            LastName = "Giles",
                            LicenseNumber = "39k8ew8087hf",
                            SSN = "123456789"
                        },
                        new
                        {
<<<<<<<< HEAD:NJInsurancePlatform/Migrations/20221130222642_gxmigration.Designer.cs
                            Id = "b4bb8b48-edcf-4204-ad46-c2cc90f2d9e7",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "6db2aa0d-f6ad-4269-b234-c885bed4a41c",
                            EmailConfirmed = false,
                            LockoutEnabled = false,
                            NormalizedUserName = "JOANAM@MYMAIL.COM",
                            PasswordHash = "AQAAAAEAACcQAAAAEIMq4UuNO377dC95Ba3akSo/h1M6QLs+DDUyUsWmVcTseMnuf3kke3TPFRSGhG7bvQ==",
                            PhoneNumber = "8790985467",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "3e861a19-789d-4092-be50-31fa510e401b",
========
                            Id = "dd6d4216-cdf4-4e91-91c4-82c1346376a4",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "bbd169cb-a3d5-4a20-97d3-ac3c396af1b6",
                            EmailConfirmed = false,
                            LockoutEnabled = false,
                            NormalizedUserName = "JOANAM@MYMAIL.COM",
                            PasswordHash = "AQAAAAEAACcQAAAAECPp88wRO+mTDLvw3UrPuVEhk1KWRTyMEjQVRPu0UUeLiRJQSR4DQlUDihlCQt5ulQ==",
                            PhoneNumber = "8790985467",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "5e0c66f2-6a6b-420c-8ddb-e130b99925ad",
>>>>>>>> Main:NJInsurancePlatform/Migrations/20221130163946_initial.Designer.cs
                            TwoFactorEnabled = false,
                            UserName = "JoanaM@mymail.com",
                            Active = true,
                            BeneficiaryMUID = new Guid("fa75877d-66a1-4f63-b8fa-d2cdb59fbdd1"),
<<<<<<<< HEAD:NJInsurancePlatform/Migrations/20221130222642_gxmigration.Designer.cs
                            CreatedDate = new DateTime(2022, 11, 30, 17, 26, 41, 843, DateTimeKind.Local).AddTicks(8290),
========
                            CreatedDate = new DateTime(2022, 11, 30, 11, 39, 46, 178, DateTimeKind.Local).AddTicks(4199),
>>>>>>>> Main:NJInsurancePlatform/Migrations/20221130163946_initial.Designer.cs
                            CustomerMUID = new Guid("3498cdd0-6913-4c08-b29f-5291f28201ce"),
                            DOB = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EmailAddress = "JoanaM@mymail.com",
                            FirstName = "Joana",
                            Gender = "female",
                            IsPrimaryPolicyHolder = false,
                            LastName = "Martin",
                            LicenseNumber = "39k8ew8087hf",
                            SSN = "123456789"
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("NJInsurancePlatform.Models.Beneficiary", b =>
                {
                    b.HasOne("NJInsurancePlatform.Models.Transaction", null)
                        .WithMany("ListOfPolicyBeneficiariesMUIDs")
                        .HasForeignKey("TransactionMUID");
                });

            modelBuilder.Entity("NJInsurancePlatform.Models.Transaction", b =>
                {
                    b.Navigation("ListOfPolicyBeneficiariesMUIDs");
                });
#pragma warning restore 612, 618
        }
    }
}
